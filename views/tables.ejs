<%- include('header.ejs') %>
    <%- include('navbar.ejs') %>
        <div class="row bg-white align-items-center ps-3 ">

            <div class="col-md-4">

                <!-- Breadcrumb trail -->

                <nav class="d-block align-middle" aria-label="breadcrumb">
                    <ol class="breadcrumb">
                     
                        <li class="breadcrumb-item">Tables</li>

                        <li class="breadcrumb-item active">
                            <%= tableName %>
                        </li>
                    </ol>
                </nav>
            </div>
            <div class="col-md-4">
                <span class="me-2 badge bg-dark">Table</span>
                <span class="text-dark">
                    <%= tableName %>
                </span>


            </div>
            <div class="col-md-4 text-end">
                <a href="" class="text-dark p-2 d-inline-block" data-bs-toggle="collapse"
                    data-bs-target="#collapseExample" aria-expanded="true" aria-controls="collapseExample"><i
                        class="bi bi-info-circle-fill "></i></a>
                <a href="" class=" bg-dark text-white p-2 d-inline-block" data-bs-toggle="modal"
                    data-bs-target="#newrecord">
                    New record </a>
            </div>

        </div>

        <div class="p-0" class="form-container ">


            <div class="position-relative">
                <% crudtable.forEach((tableName)=> { %>

                    <div class="row   border-top  collapse" id="collapseExample">
                        <div class="col-md-10 border-end">

                            <div class="d-block ps-3 "> 
                                <% if (tableName.description) { %>
                                    <%= tableName.description %>
                                        <% } else { %>
                                            Empty description
                                            <% } %>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="d-block  position-relative"> 
                                <p class="d-block mr-2">
                                    <%= tableName.createdat.toLocaleDateString('cs-CZ', { day: 'numeric' ,
                                        month: 'numeric' , year: 'numeric' }) %>
                                </p> 

                            </div>
                        </div>
                    </div>
                    <% }); %>

            </div>
            <div class="modal fade" id="newrecord" tabindex="-1" aria-labelledby="newrecodLabel" aria-hidden="true">
                <div class="modal-dialog  ">

                    <div class="modal-content bg-transparent bg-opacity-50">
                        <div class="modal-header bg-dark">
                            <p class="text-dark text-white m-0">New record in <%= tableName %>
                            </p>
                            <button type="button" class="btn-close shadow bg-white" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form method="POST" class="" action="/tables/<%= tableName %>"
                                onsubmit="return validateFormRecord()">
                                <div class="d-flex">
                                    <% for (let i=0; i < columns.length; i++) { %>
                                        <% if (columns[i].name !=='id' ) { %>
                                            <div class="m-2 form-group d-flex">
                                                <label class="pb-1 text-dark" for="<%= columns[i].name %>">
                                                    <%= columns[i].name %><small>
                                                            <%= columns[i].type %>
                                                        </small>
                                                </label>

                                                <% if (columns[i].type.startsWith('int')) { %>
                                                    <input type="number" class="form-control border-dark-subtle"
                                                        id="<%= columns[i].name %>" name="<%= columns[i].name %>"
                                                        placeholder="Enter <%= columns[i].name %>"
                                                        data-column-type="<%= columns[i].type %>">
                                                    <% } else { %>
                                                        <input type="text" class="form-control border-dark-subtle"
                                                            id="<%= columns[i].name %>" name="<%= columns[i].name %>"
                                                            placeholder="Enter <%= columns[i].name %>"
                                                            data-column-type="<%= columns[i].type %>">
                                                        <% } %>
                                            </div>
                                            <% } else { %>
                                                <input type="hidden" class="form-control border-dark-subtle"
                                                    id="<%= columns[i].name %>" name="<%= columns[i].name %>"
                                                    placeholder="Enter <%= columns[i].name %>"
                                                    data-column-type="<%= columns[i].type %>">
                                                <% } %>
                                                    <% } %>
                                </div>
                                <div class="d-flex flex-row-reverse">
                                    <button type="submit" class="ms-3 btn btn-dark text-white">Add</button>


                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="table-container d-block ">

            <table class="table tableone  table-secondary table-striped      ">
                <thead>
                    <tr class="border-top">
                        <% for (let i=0; i < columns.length; i++) { %>
                            <th class="bg-white  text-dark">
                                <%= columns[i].name %> <small>
                                        <%= columns[i].type %>
                                    </small>
                            </th>
                            <% } %>
                                <th class="bg-white text-dark">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% for (let i=0; i < records.length; i++) { %>
                        <tr>
                            <% for (let j=0; j < columns.length; j++) { %>
                                <td class="">
                                    <div class="editable">
                                        <span class="view-mode  p-1" data-column-name="<%= columns[j].name %>"
                                            data-record-id="<%= records[i].id %>">
                                            <%= records[i][columns[j].name] %>
                                        </span>
                                        <input type="text" style="display:none;"
                                            data-column-name="<%= columns[j].name %>" class="edit-mode p-1 form-control"
                                            data-record-id="<%= records[i].id %>"
                                            value="<%= records[i][columns[j].name] %>">
                                    </div>
                                </td>
                                <% } %>
                                    <td class="">

                                        <button type="button" class="btn btn-outline-success save-btn">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                fill="currentColor" class="bi bi-patch-check" viewBox="0 0 16 16">
                                                <path fill-rule="evenodd"
                                                    d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z" />
                                                <path
                                                    d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z" />
                                            </svg>
                                            Save</button>
                                        <!--<button type="button" class="btn btn-sm btn-dark edit-btn">Edit</button>-->
                                        <button type="button" class="btn btn-outline-primrary delete-btn"
                                            onclick="return confirm('Are you sure you want to delete this record?')">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                                <path
                                                    d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z">
                                                </path>
                                                <path
                                                    d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z">
                                                </path>
                                            </svg>
                                            Delete
                                        </button>

                                    </td>
                        </tr>
                        <% } %>
                </tbody>
            </table>
            <% if (records.length==0) { %>
                <h5 class="text-dark">This table is empty.</h5>
                <% } %>
        </div>

        <div style="position: absolute; top: 20px; right: 20px;">
            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <strong class="me-auto">Error!</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body"></div>
            </div>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"
            crossorigin="anonymous"></script>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                function validateFormRecord() {
                    const inputElements = document.querySelectorAll('.form-control');
                    for (let i = 0; i < inputElements.length; i++) {
                        const input = inputElements[i];
                        const columnType = input.dataset.columnType;
                        const value = input.value.trim();
                        if (columnType === 'int' && !/^\d+$/.test(value)) {
                            showToast(`Invalid value for ${input.name}. Only numbers are allowed.`);
                            return false;
                        }
                        if (input.name === 'id') { } else {
                            if (value.length === 0) {
                                showToast(`Cannot insert empty value for ${input.name}.`);
                                return false;
                            }
                            if (value.length === 1 && columnType === 'varchar') {
                                showToast(`Cannot insert zero length value for ${input.name}.`);
                                return false;
                            }
                        }
                    }
                    return true;
                }

                function showToast(message) {
                    const toastBody = document.querySelector('.toast-body');
                    toastBody.textContent = message;

                    const toast = new bootstrap.Toast(document.querySelector('.toast'));
                    toast.show();
                }
                var editButtons = document.querySelectorAll(".edit-btn");
                var deleteButtons = document.querySelectorAll(".delete-btn");
                var saveButtons = document.querySelectorAll(".save-btn");
                var editableCells = document.querySelectorAll(".editable");

                // Edit button click event
                editButtons.forEach(function (button) {
                    button.addEventListener("click", function () {
                        var row = this.closest("tr");
                        var editableCells = row.querySelectorAll(".editable");
                        editableCells.forEach(function (cell) {
                            var viewMode = cell.querySelector(".view-mode");
                            var editMode = cell.querySelector(".edit-mode");
                            viewMode.style.display = "none";
                            editMode.style.display = "block";
                        });
                        button.style.display = "none";
                        row.querySelector(".delete-btn").style.display = "none";
                        row.querySelector(".save-btn").style.display = "inline";
                    });
                });

                saveButtons.forEach(function (button) {
                    button.addEventListener("click", async function () {
                        var row = this.closest("tr");
                        var editableCells = row.querySelectorAll(".editable");
                        var update = {}; // Object to store the updated records
                        var recordId;

                        editableCells.forEach(function (cell) {
                            recordId = cell.querySelector("input").getAttribute("data-record-id");
                            let columnName = cell.querySelector("input").getAttribute("data-column-name");
                            if (columnName == "id") {
                                return; // Skip the "id" column
                            }
                            var viewMode = cell.querySelector(".view-mode");
                            var editMode = cell.querySelector(".edit-mode");
                            viewMode.textContent = editMode.value;
                            viewMode.style.display = "inline";
                            editMode.style.display = "none";

                            update[columnName] = editMode.value;
                        });

                        console.log("Record ID:", recordId);

                        let updated = JSON.stringify(update);
                        console.log("update:", updated);
                        var saveUrl = "/tables/<%= tableName %>/edit/" + recordId;
                        try {
                            const response = await fetch(saveUrl, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: updated, // Assign the updatedRecord object directly to the body property
                            });

                            if (response.ok) {
                                button.style.display = "none";
                                row.querySelector(".edit-btn").style.display = "inline";
                                row.querySelector(".delete-btn").style.display = "inline";
                            } else {
                                console.error("Failed to save record:", response.statusText);
                            }
                        } catch (error) {
                            console.error("Failed to save record:", error);
                        }
                    });
                });




                deleteButtons.forEach(function (button) {
                    button.addEventListener("click", function () {

                        var row = this.closest("tr");
                        var recordId = row.querySelector(".editable input").getAttribute("data-record-id");
                        var deleteUrl = "/tables/<%= tableName %>/delete/" + recordId;

                        // Perform delete request
                        fetch(deleteUrl, { method: "DELETE" })
                            .then(function (response) {
                                if (response.ok) {
                                    row.remove();
                                } else {
                                    console.error("Failed to delete record:", response.statusText);
                                }
                            })
                            .catch(function (error) {
                                console.error("Failed to delete record:", error);
                            });
                    });
                });

                editableCells.forEach(function (cell) {
                    cell.addEventListener("click", function () {
                        var viewMode = cell.querySelector(".view-mode");
                        var editMode = cell.querySelector(".edit-mode");
                        viewMode.style.display = "none";
                        editMode.style.display = "block";
                        editMode.focus();
                        this.closest("tr").querySelector(".save-btn").style.display = "inline";
                    });
                });
            });

        </script>


        </body>

        </html>